?treenetproc::proc_dendro_L2
d133_L2 <- proc_dendro_L2(dendro_L1 = d133_L1,
temp_L1 = temp_data_133_L1,
tol_out = 2,
tol_jump = 3,
plot = TRUE,
frost_thr = 1,
plot_period = "full",
plot_export = TRUE,
interpol = 3.5*60,
frag_len = NULL,
plot_name = "Slice_butte_2022_23_133_full",
tz="GMT")
graphics.off()
d133_L2_monthly <- proc_dendro_L2(dendro_L1 = d133_L1,
temp_L1 = temp_data_133_L1,
tol_out = 2,
tol_jump = 3,
frost_thr = 1,
plot = TRUE,
interpol = 3.5*60,
plot_period = "monthly",
plot_export = TRUE,
plot_name = "Slice_butte_2022_23_133_monthly",
tz="GMT")
graphics.off()
d133_L2_corr1 <- corr_dendro_L2(dendro_L1 = d133_L1,
dendro_L2 = d133_L2,
delete = c("2022-05-10","2022-06-29"),
n_days = 2,
plot = TRUE,
plot_export = TRUE,
tz="GMT")
##check errors in pdf and with this subset
d133_L2_corr1[which((d133_L2_corr1$flags)!="NA"),]
##plot
ggplot((subset(d133_L2_corr1, frost == "FALSE")), aes(x=ts))+
geom_line(aes(y=value), color = "grey70")+
geom_line(aes(y=gro_yr), color = "seagreen")+
geom_line(aes(y=twd), color = "red")
#create column for separate years
d133_L2_corr1$yr <- substr(d133_L2_corr1$ts,1,4)
d133_2023_growth <- d133_L2_corr1[which(d133_L2_corr1$yr == "2023"),]
d133_2022_growth <- d133_L2_corr1[which(d133_L2_corr1$yr == "2022"),]
d133_2023_growth$gro_tot <- d133_2023_growth$gro_yr + 2214
d133_2022_growth$gro_tot <- d133_2022_growth$gro_yr
#recombine both years data frames into one.
d_133_L3 <- rbind(d133_2022_growth, d133_2023_growth)
## plot
ggplot((subset(d_133_L3, frost == "FALSE")), aes(x=ts))+
geom_line(aes(y=value), color = "grey70")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red")
ggplot((subset(d_133_L3, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey70")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red")
d133_phase <- phase_stats(d133_L2_corr1,
plot_phase = TRUE,
plot_export = TRUE,
agg_daily = TRUE,
tz = 'GMT'
)
#some preliminary analysis/exploration
ggplot(subset(d133_phase, doy > 180 & doy < 250), aes(x=doy))+
geom_point(aes(y = shrink_amp, colour = "Shrinkage" ))+
geom_point(aes(y = exp_amp, colour ="Expansion"))+
ylab("Amplitude")
ggplot(subset(d133_phase, doy > 180 & doy < 250), aes(x=doy))+
geom_point(aes(y = shrink_slope, colour = "Shrinkage" ))+
geom_point(aes(y = exp_slope, colour ="Expansion"))+
ylab("Slope")
ggplot(subset(d133_phase, doy > 180 & doy < 250), aes(x=shrink_amp, y =  exp_amp))+
geom_point()+
ylab(" Expansion amplitude")+
xlab(" Shrinkage amplitude")
ggplot(subset(d133_phase, doy > 180 & doy < 250), aes(x=shrink_slope, y =  exp_slope))+
geom_point()+
ylab(" Expansion slope")+
xlab(" Shrinkage slope")
#for plotting
write.csv(file = "Cleaning/dendro_133_cleaned.csv", d_133_L3)
#daily growth stats
write.csv(file = "Cleaning/dendro_133_phase_stats.csv", d133_phase)
ID = '140' #dendrometer ID number
all_data_140<-read.table('Raw/data_92223140_2023_04_23_0.csv', header=F, sep=";", dec=',')
str(all_data_140)
dendro_data_140 = all_data_140[,c(2,7)]
colnames(dendro_data_140) <- c('datetime','value')
#fix timestamp
ts = as.POSIXct(dendro_data_140['datetime'][,],format="%Y.%m.%d %H:%M",tz="GMT")
d140_L0<-cbind(dendro_data_140["value"]+0,ts,series=ID)
#plot raw data
# first grab years string
years <-left(d140_L0[,"ts"],4)
# Then plot
#set number of plots
par(mfrow=c(1,1))
#set margins
par(mar = c(5, 5, 5, 5))
# for loop plots data iteratively.
for(y in 1:length(unique(years))){
# selected year
sel<-d140_L0[which(years==unique(years)[y]),]
# handle first year
if(y==1){
plot(difftime(as.POSIXct(sel$ts,format="%Y-%m-%d %H:%M:%S",tz="GMT"),
as.POSIXct(paste0(unique(years)[y],"-01-01 00:00:00"),
format="%Y-%m-%d %H:%M:%S",tz="GMT"),
units = "days"),
sel$value,
ylab=expression("L0 ("*mu*"m)"),
xlab="Day of year",type="l",
col=viridis(length(unique(years)))[y],
xlim=c(0,365),
ylim=c(min(d140_L0$value,na.rm=T),
max(d140_L0$value,na.rm=T)),
main=unique(d140_L0$series))
legend("bottomright",
as.character(unique(years)[-4]),
col=viridis(length(unique(years))),
bty="n",lty=1)
# add other years
}else{
lines(difftime(as.POSIXct(sel$ts,format="%Y-%m-%d %H:%M:%S",tz="GMT"),
as.POSIXct(paste0(unique(years)[y],"-01-01 00:00:00"),
format="%Y-%m-%d %H:%M:%S",tz="GMT"),
units = "days"),
sel$value,
col=viridis(length(unique(years)))[y])}
}
###Now to cleaning the dendrometery data##########
# level 1 processing of dendrometer readings (time align)
?treenetproc::proc_L1
d140_L1 <- proc_L1(data_L0 = d140_L0,
reso = 60 ,
#input = "wide",
date_format ="%Y-%m-%d %H:%M:%S",
tz = "GMT")
head(d140_L1)
# level 1 processing of temperature data
temp_data_140_L0 <- cbind(all_data_140[,c(4,6)],ts,series=ID)
colnames(temp_data_140_L0) <-c('value','empty','ts','series')
# time-align temperature data with proc_L1
temp_data_140_L1 <- proc_L1(data_L0 = temp_data_140_L0,
reso = 60,
date_format ="%Y-%m-%d %H:%M:%S",
tz = "GMT")
head(temp_data_140_L1)
## proc_dendro_L2 integrates dendrometer readings with temperature, detects errors, corrects them and plots gro and twd by date.
#more info here:
?treenetproc::proc_dendro_L2
## first plot full dataset for dendrometer. Plot will be exported to working directory as pdf
d140_L2 <- proc_dendro_L2(dendro_L1 = d140_L1,
temp_L1 = temp_data_140_L1,
tol_out = 2,
tol_jump = 3,
plot = TRUE,
frost_thr = 1,
plot_period = "full",
plot_export = TRUE,
interpol = 3.5*60,
frag_len = NULL,
plot_name = "Slice_butte_2022_23_140_full",
tz="GMT")
graphics.off()
## Automated error detection did pretty well.
## Tolerance for outliers and tolerance for jumps were set lower (more stringent) than default value.
#plot monthly and look at exported pdf for greater detail.
d140_L2_monthly <- proc_dendro_L2(dendro_L1 = d140_L1,
temp_L1 = temp_data_140_L1,
tol_out = 2,
tol_jump = 3,
frost_thr = 1,
plot = TRUE,
interpol = 3.5*60,
plot_period = "monthly",
plot_export = TRUE,
plot_name = "Slice_butte_2022_23_140_monthly",
tz="GMT")
graphics.off()
#Can manually correct some areas where automated data cleaning was not up to snuff
# First off, delete data from before installation on June 22st 2022 and the first week after installation
#info on function here
?corr_dendro_L2
d140_L2_corr1 <- corr_dendro_L2(dendro_L1 = d140_L1,
dendro_L2 = d140_L2,
delete = c("2022-05-10","2022-06-29"),
n_days = 2,
plot = TRUE,
plot_export = TRUE,
tz="GMT")
##check errors in pdf and with this subset
d140_L2_corr1[which((d140_L2_corr1$flags)!="NA"),]
##plot
ggplot((subset(d140_L2_corr1, frost == "FALSE")), aes(x=ts))+
geom_line(aes(y=value), color = "grey70")+
geom_line(aes(y=gro_yr), color = "seagreen")+
geom_line(aes(y=twd), color = "red")
#ok but may want to visualize cumulative growth instead of growth for each year.
#create column for separate years
d140_L2_corr1$yr <- substr(d140_L2_corr1$ts,1,4)
# create seperate dataframes for each year
d140_2023_growth <- d140_L2_corr1[which(d140_L2_corr1$yr == "2023"),]
d140_2022_growth <- d140_L2_corr1[which(d140_L2_corr1$yr == "2022"),]
#for 2023, add that years growth to 2022's maximum growth of 2214 Âµm
#for 2022, make a copy of gro_yr
d140_2023_growth$gro_tot <- d140_2023_growth$gro_yr + 2214
d140_2022_growth$gro_tot <- d140_2022_growth$gro_yr
#recombine both years data frames into one.
d_140_L3 <- rbind(d140_2022_growth, d140_2023_growth)
## plot
ggplot((subset(d_140_L3, frost == "FALSE")), aes(x=ts))+
geom_line(aes(y=value), color = "grey70")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red")
## just look at the growing season
ggplot((subset(d_140_L3, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey70")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red")
##The function phase_stats will compute rates of expansion(growth) and shrinkage (twd) and aggregate these on a daily basis.
?phase_stats
d140_phase <- phase_stats(d140_L2_corr1,
plot_phase = TRUE,
plot_export = TRUE,
agg_daily = TRUE,
tz = 'GMT'
)
## These growth and shrink rates can be compared with temperature, VPD and soil moisture.
## We will likely restrict this analysis to the growing season.
#some preliminary analysis/exploration
ggplot(subset(d140_phase, doy > 180 & doy < 250), aes(x=doy))+
geom_point(aes(y = shrink_amp, colour = "Shrinkage" ))+
geom_point(aes(y = exp_amp, colour ="Expansion"))+
ylab("Amplitude")
ggplot(subset(d140_phase, doy > 180 & doy < 250), aes(x=doy))+
geom_point(aes(y = shrink_slope, colour = "Shrinkage" ))+
geom_point(aes(y = exp_slope, colour ="Expansion"))+
ylab("Slope")
ggplot(subset(d140_phase, doy > 180 & doy < 250), aes(x=shrink_amp, y =  exp_amp))+
geom_point()+
ylab(" Expansion amplitude")+
xlab(" Shrinkage amplitude")
ggplot(subset(d140_phase, doy > 180 & doy < 250), aes(x=shrink_slope, y =  exp_slope))+
geom_point()+
ylab(" Expansion slope")+
xlab(" Shrinkage slope")
##now that data is cleaned, export for analysis with weather data
#for plotting
write.csv(file = "Cleaning/dendro_140_cleaned.csv", d_140_L3)
#daily growth stats
write.csv(file = "Cleaning/dendro_140_phase_stats.csv", d140_phase)
ggplot((subset(d_140_L3, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey70")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red")
ggplot((subset(d_140_L3, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey40")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red4")
lines((subset(d_133_L3, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey70")+
geom_line(aes(y=gro_tot), color = "green")+
geom_line(aes(y=twd), color = "red")
lines((subset(d_133_L3, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey70")+
geom_line(aes(y=gro_tot), color = "green")+
geom_line(aes(y=twd), color = "red")
# define sample data frames
sample_data <- subset(d_140_L3, ts<as.POSIXct("2022-10-23 00:00") & ts>as.POSIXct("2022-06-29 00:00")), aes(x=ts))+
# define sample data frames
sample_data <- subset(d_140_L3, ts<as.POSIXct("2022-10-23 00:00") & ts>as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
ggplot((subset(d_140_L3, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey40")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red4")
lines((subset(d_133_L3, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey70")+
geom_line(aes(y=gro_tot), color = "green")+
geom_line(aes(y=twd), color = "red")
length(x)
length(y)
lines((subset(d_133_L3, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y2=value), color = "grey70")+
geom_line(aes(y2=gro_tot), color = "green")+
geom_line(aes(y2=twd), color = "red")
ggplot_add(lines((subset(d_133_L3, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y2=gro_tot), color = "green")+
geom_line(aes(y2=value), color = "grey70")+
geom_line(aes(y2=twd), color = "red")
ggplot((subset(d_140_L3, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
ggplot((subset(d_140_L3, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey40")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red4")
ggplot_add(lines((subset(d_133_L3, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
ggplot((subset(d_140_L3, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey40")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red4")
ggplot_add(lines((subset(d_133_L3, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
ggplot((subset(d_140_L3, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey40")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red4")
ggplot_add(lines((subset(d_133_L3, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y2=value), color = "grey70")+
geom_line(aes(y2=gro_tot), color = "green")+
geom_line(aes(y2=twd), color = "red"))
View(d_140_L3)
View(d_133_L3)
#subset dendro 133 to equalize
d_133_L3 <- d_133_L3[,-1]
#subset dendro 133 to equalize
d_133_L3 <- d_133_L3[,-1]
#read in data for dendros
d133 <- read.csv("Cleaning/dendro_133_cleaned.csv")
#recombine both years data frames into one.
d_133_L3 <- rbind(d133_2022_growth, d133_2023_growth)
#subset dendro 133 to equalize
d_133 <- d_133[-1,]
#read in data for dendros
d133 <- read.csv("Cleaning/dendro_133_cleaned.csv")
#subset dendro 133 to equalize
d_133 <- d_133[-1,]
#subset dendro 133 to equalize
d133 <- d133[-1,]
d140 <- read.csv("Cleaning/dendro_140_cleaned.csv")
#plotting
ggplot((subset(d140, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey40")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red4")
str(d140)
View(d133)
d133 <- d133 %>% mutate(ts = mdy_hms(ts))
View(d133)
#read in data for dendros
d133 <- read.csv("Cleaning/dendro_133_cleaned.csv")
View(d133)
d133 <- d133 %>% mutate(ts = ymd_hms(ts))
ggplot_add(lines((subset(d133, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y2=value), color = "grey70")+
geom_line(aes(y2=gro_tot), color = "green")+
geom_line(aes(y2=twd), color = "red"))
d140 <- d140 %>% mutate(ts = ymd_hms(ts))
#plotting
ggplot((subset(d140, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey40")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red4")
ggplot_add(lines((subset(d133, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y2=value), color = "grey70")+
geom_line(aes(y2=gro_tot), color = "green")+
geom_line(aes(y2=twd), color = "red"))
#subset dendro 133 to equalize
d133 <- d133[-1,]
#plotting
ggplot((subset(d140, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey40")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red4")
ggplot_add(lines((subset(d133, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y2=value), color = "grey70")+
geom_line(aes(y2=gro_tot), color = "green")+
geom_line(aes(y2=twd), color = "red"))
cbind(d133,d140)
View(d133)
combined_dendro <- cbind(d133,d140)
View(combined_dendro)
ggplot((subset(combined_dendro, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = series)+
geom_line(aes(y=gro_tot), color = series)+
geom_line(aes(y=twd), color = series)
ggplot((subset(combined_dendro, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "series")+
geom_line(aes(y=gro_tot), color = "series")+
geom_line(aes(y=twd), color = "series")
ggplot((subset(combined_dendro, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = combined_dendro$series)+
geom_line(aes(y=gro_tot), color = series)+
geom_line(aes(y=twd), color = series)
ggplot((subset(combined_dendro, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = combined_dendro$series)+
geom_line(aes(y=gro_tot), color = combined_dendro$series)+
geom_line(aes(y=twd), color = combined_dendro$series)
#plotting
ggplot((subset(d140, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey40")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red4")
ggplot(subset(d133, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
ggplot((subset(d133, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey70")+
geom_line(aes(y=gro_tot), color = "green")+
geom_line(aes(y=twd), color = "red"))
ggplot((subset(d133, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey70")+
geom_line(aes(y=gro_tot), color = "green")+
geom_line(aes(y=twd), color = "red")
#plotting
ggplot((subset(d140, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey40")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red")
xlab="Date"
#plotting
ggplot((subset(d140, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey40")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red")
xlab="Date"
View(all_data_140)
p + xlab(âDate of 2022â)
p + xlab(âDate of 2022â)
p + xlab(âDateâ)
xlab(âDateâ)
+xlab(âDateâ)
p + labs(x = âDate of 2022â, y = âradial change (um)â)
ggplot((subset(d140, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey40")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red")
p + labs(x = âDate of 2022â, y = âradial change (um)â)
replace("ts","Date of 2022")
theme(
axis.title = element_text(),         # Change both x and y axis titles
axis.title.x = Date_of_2022(),       # Change x axis title only
axis.title.x.top = element_text(),   # For x axis label on top axis
axis.title.y = element_text(),       # Change y axis title only
axis.title.y.right = element_text(), # For y axis label on right axis
)
# Default plot
print(p)
ggplot<-ggplot((subset(d140, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey40")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red")+ labs(x="Date of 2022", y="Displacement of Dendrometer (um)")
ggplot((subset(d140, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
+                  geom_line(aes(y=value), color = "grey40")+
+                  geom_line(aes(y=gro_tot), color = "seagreen")+
+                  geom_line(aes(y=twd), color = "red") labs(x="Date of 2022", y="Displacement of Dendrometer (um)")
ggplot<-ggplot((subset(d140, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey40")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red")+
labs(x="Date of 2022", y="Displacement of Dendrometer (um)")
print(ggplot+labs(x="Date of 2022", y="Displacement of Dendrometer (um)"))
print(ggplot+labs(title="Growth, Dendrometer Displacement, and Tree Water Deficit of Douglas-Fir 140"))
print(ggplot+labs(title="Growth, Dendrometer Displacement, and Tree Water Deficit /n of Douglas-Fir 140"))
print(ggplot+labs(title="Growth, Dendrometer Displacement, and Tree Water Deficit /nof Douglas-Fir 140"))
print(ggplot+labs(title="Growth, Dendrometer Displacement, and Tree Water Deficit
of Douglas-Fir 140"))
print(ggplot+labs(title="Growth, Dendrometer Displacement, and Tree Water Deficit
of Douglas-Fir 140"))
print(ggplot+labs(title="Growth, Dendrometer Displacement, and Tree Water Deficit
of Douglas-Fir 140"))
print(ggplot+labs(title="Growth, Dendrometer Displacement, and Tree Water Deficit
of Douglas-Fir 140"))
ggplot((subset(d133, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey70")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red")
print(ggplot+labs(x="Date of 2022", y="Displacement of Dendrometer (um)"))
133plot<-ggplot((subset(d133, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
plot_133<-ggplot((subset(d133, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey70")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red")
#plotting 133
ggplot((subset(d133, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey40")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red")
plot_133<-ggplot((subset(d133, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey40")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red")
print(plot_133+labs(x="Date of 2022", y="Displacement of Dendrometer (um)"))
print(plot_133+labs(title="Growth, Dendrometer Displacement, and Tree Water Deficit
of Douglas-Fir 133"))
print(plot_133+labs(x="Date of 2022", y="Displacement of Dendrometer (um)"))
print(plot_133+labs(title="Growth, Dendrometer Displacement, and Tree Water Deficit
of Douglas-Fir 133"))
print(plot_133+labs(x="Date of 2022", y="Displacement of Dendrometer (um)",title="Growth, Dendrometer Displacement, and Tree Water Deficit
of Douglas-Fir 133"))
#plotting 140
ggplot((subset(d140, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey40")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red")
plot140<-ggplot((subset(d140, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey40")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red")
#labeling the graph 140
print(ggplot+labs(x="Date of 2022", y="Displacement of Dendrometer (um)",title="Growth, Dendrometer Displacement, and Tree Water Deficit
of Douglas-Fir 140"))
plot140<-ggplot((subset(d140, ts < as.POSIXct("2022-10-23 00:00") & ts > as.POSIXct("2022-06-29 00:00"))), aes(x=ts))+
geom_line(aes(y=value), color = "grey40")+
geom_line(aes(y=gro_tot), color = "seagreen")+
geom_line(aes(y=twd), color = "red")
#labeling the graph 140
print(plot140+labs(x="Date of 2022", y="Displacement of Dendrometer (um)",title="Growth, Dendrometer Displacement, and Tree Water Deficit
of Douglas-Fir 140"))
legend(Oct, 2000, legend=c("Overall Growth", "Daily Shrinkage and Growth", "Tree Water Deficit"),
col=c("seagreen", "grey40", "red"), lty=1:2, cex=0.8)
legend("Oct", 2000, legend=c("Overall Growth", "Daily Shrinkage and Growth", "Tree Water Deficit"),col=c("seagreen", "grey40", "red"), lty=1:2, cex=0.8)
legend('middleright', legend=c(("Overall Growth", "Daily Shrinkage and Growth", "Tree Water Deficit"),col=c("seagreen", "grey40", "red"), lty=1)
legend('middleright', legend=c("Overall Growth", "Daily Shrinkage and Growth", "Tree Water Deficit"),col=c("seagreen", "grey40", "red"), lty=1)
legend('right', legend=c("Overall Growth", "Daily Shrinkage and Growth", "Tree Water Deficit"),col=c("seagreen", "grey40", "red"), lty=1)
